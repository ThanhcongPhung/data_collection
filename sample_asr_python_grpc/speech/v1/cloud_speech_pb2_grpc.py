# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import cloud_speech_pb2 as cloud__speech__pb2


class SpeechStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Recognize = channel.unary_unary(
        '/vais.cloud.speech.v1.Speech/Recognize',
        request_serializer=cloud__speech__pb2.RecognizeRequest.SerializeToString,
        response_deserializer=cloud__speech__pb2.RecognizeResponse.FromString,
        )
    self.StreamingIntentRecognize = channel.stream_stream(
        '/vais.cloud.speech.v1.Speech/StreamingIntentRecognize',
        request_serializer=cloud__speech__pb2.StreamingRecognizeRequest.SerializeToString,
        response_deserializer=cloud__speech__pb2.StreamingIntentRecognizeResponse.FromString,
        )
    self.StreamingRecognize = channel.stream_stream(
        '/vais.cloud.speech.v1.Speech/StreamingRecognize',
        request_serializer=cloud__speech__pb2.StreamingRecognizeRequest.SerializeToString,
        response_deserializer=cloud__speech__pb2.StreamingRecognizeResponse.FromString,
        )
    self.Text2SpeechHmmAiHoa = channel.unary_unary(
        '/vais.cloud.speech.v1.Speech/Text2SpeechHmmAiHoa',
        request_serializer=cloud__speech__pb2.TtsRequest.SerializeToString,
        response_deserializer=cloud__speech__pb2.TtsResponse.FromString,
        )
    self.Text2SpeechHmmMinhNguyet = channel.unary_unary(
        '/vais.cloud.speech.v1.Speech/Text2SpeechHmmMinhNguyet',
        request_serializer=cloud__speech__pb2.TtsRequest.SerializeToString,
        response_deserializer=cloud__speech__pb2.TtsResponse.FromString,
        )
    self.Text2SpeechConcatAiHoa = channel.unary_unary(
        '/vais.cloud.speech.v1.Speech/Text2SpeechConcatAiHoa',
        request_serializer=cloud__speech__pb2.TtsRequest.SerializeToString,
        response_deserializer=cloud__speech__pb2.TtsResponse.FromString,
        )
    self.Text2SpeechConcatMinhNguyet = channel.unary_unary(
        '/vais.cloud.speech.v1.Speech/Text2SpeechConcatMinhNguyet',
        request_serializer=cloud__speech__pb2.TtsRequest.SerializeToString,
        response_deserializer=cloud__speech__pb2.TtsResponse.FromString,
        )


class SpeechServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Recognize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamingIntentRecognize(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamingRecognize(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Text2SpeechHmmAiHoa(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Text2SpeechHmmMinhNguyet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Text2SpeechConcatAiHoa(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Text2SpeechConcatMinhNguyet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SpeechServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Recognize': grpc.unary_unary_rpc_method_handler(
          servicer.Recognize,
          request_deserializer=cloud__speech__pb2.RecognizeRequest.FromString,
          response_serializer=cloud__speech__pb2.RecognizeResponse.SerializeToString,
      ),
      'StreamingIntentRecognize': grpc.stream_stream_rpc_method_handler(
          servicer.StreamingIntentRecognize,
          request_deserializer=cloud__speech__pb2.StreamingRecognizeRequest.FromString,
          response_serializer=cloud__speech__pb2.StreamingIntentRecognizeResponse.SerializeToString,
      ),
      'StreamingRecognize': grpc.stream_stream_rpc_method_handler(
          servicer.StreamingRecognize,
          request_deserializer=cloud__speech__pb2.StreamingRecognizeRequest.FromString,
          response_serializer=cloud__speech__pb2.StreamingRecognizeResponse.SerializeToString,
      ),
      'Text2SpeechHmmAiHoa': grpc.unary_unary_rpc_method_handler(
          servicer.Text2SpeechHmmAiHoa,
          request_deserializer=cloud__speech__pb2.TtsRequest.FromString,
          response_serializer=cloud__speech__pb2.TtsResponse.SerializeToString,
      ),
      'Text2SpeechHmmMinhNguyet': grpc.unary_unary_rpc_method_handler(
          servicer.Text2SpeechHmmMinhNguyet,
          request_deserializer=cloud__speech__pb2.TtsRequest.FromString,
          response_serializer=cloud__speech__pb2.TtsResponse.SerializeToString,
      ),
      'Text2SpeechConcatAiHoa': grpc.unary_unary_rpc_method_handler(
          servicer.Text2SpeechConcatAiHoa,
          request_deserializer=cloud__speech__pb2.TtsRequest.FromString,
          response_serializer=cloud__speech__pb2.TtsResponse.SerializeToString,
      ),
      'Text2SpeechConcatMinhNguyet': grpc.unary_unary_rpc_method_handler(
          servicer.Text2SpeechConcatMinhNguyet,
          request_deserializer=cloud__speech__pb2.TtsRequest.FromString,
          response_serializer=cloud__speech__pb2.TtsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vais.cloud.speech.v1.Speech', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
